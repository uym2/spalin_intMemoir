linear=seq(0.008,0.004,(0.004-0.008)/(n-1)),
constant = rep(0.006,n))
d_true = melt(d,id.vars = c("frame"))
d_true$type = "true"
colnames(d_true) = c("frame","rateModel","rate","type")
d_est = read.table("problin_k200_inferred_rates_smooth_1000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("true","est"),labels = c("true","estimated"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_1000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_1500.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_100.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_500.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_1000.txt",header=T)
d_est = read.table("problin_k200_inferred_rates_smooth_10000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_1000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_1500.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_500.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_1500.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_1000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_0.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("true_scaled_inferred_rates_smooth_0.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("true_scaled_inferred_rates_smooth_100.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("true_scaled_inferred_rates_smooth_1000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_1000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_500.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_750.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_1000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,color=rateModel,linetype=type)) + geom_line() + theme_classic()
ggsave("true_scaled_inferred_rates_smooth_1000.pdf")
ggplot(d,aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateMode)  + theme_classic()
ggplot(d,aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateMode)  + theme_classic()
ggplot(d,aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  + theme_classic()
ggplot(d,aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel,scale="free")  + theme_classic()
ggplot(d,aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  + theme_classic()
a_start = 0.01
a_end = 0.002
n = 215
la_start = log(a_start)
la_end = log(a_end)
la = seq(la_start,la_end,(la_end-la_start)/(n-1))
a = exp(la)
mean(a)
a_start = 0.008
a_end = 0.004
n = 215
la_start = log(a_start)
la_end = log(a_end)
la = seq(la_start,la_end,(la_end-la_start)/(n-1))
a = exp(la)
mean(a)
a_start = 0.01
a_end = 0.002
n = 215
la_start = log(a_start)
la_end = log(a_end)
la = seq(la_start,la_end,(la_end-la_start)/(n-1))
a = exp(la)
d = data.frame(frame=seq(1:n)-1,rate_exp=a,rate_lin=seq(0.008,0.004,(0.004-0.008)/(n-1)))
dm = melt(d,id.vars = c("frame"))
ggplot(dm,aes(x=frame,y=value,color=variable)) + geom_line() + theme_classic()
a_start = 0.008
a_end = 0.004
n = 215
la_start = log(a_start)
la_end = log(a_end)
la = seq(la_start,la_end,(la_end-la_start)/(n-1))
a = exp(la)
a2_start = 0.01
a2_end = 0.002
n = 215
la2_start = log(a2_start)
la2_end = log(a2_end)
la2 = seq(la2_start,la2_end,(la2_end-la2_start)/(n-1))
a2 = exp(la2)
d = data.frame(frame=seq(1:n)-1,exp=a, exp2=a2,
linear=seq(0.008,0.004,(0.004-0.008)/(n-1)),
constant = rep(0.006,n))
d_true = melt(d,id.vars = c("frame"))
d_true$type = "true"
colnames(d_true) = c("frame","rateModel","rate","type")
d_est = read.table("problin_k200_inferred_rates_smooth_1000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
ggplot(d,aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  + theme_classic()
ggplot(d,aes(x=frame,y=rate,linetype=type,color=rateModel)) + geom_line() +
#facet_wrap(~rateModel)  +
theme_classic()
ggplot(d,aes(x=frame,y=rate,linetype=type,color=rateModel)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
ggplot(d,aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
ggsave("problin_k200_inferred_rates_smooth_1000.pdf")
ggplot(d[d$rateModel != "exp",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
ggsave("problin_k200_inferred_rates_smooth_1000.pdf")
d_est = read.table("problin_k10_inferred_rates_smooth_1000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d_est = read.table("problin_k10_inferred_rates_smooth_1000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
ggsave("problin_k10_inferred_rates_smooth_1000.pdf")
d_est = read.table("problin_k10_inferred_rates_smooth_5000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
d_est = read.table("problin_k10_inferred_rates_smooth_5000.txt",header=T)
d_est = read.table("problin_k10_inferred_rates_smooth_10000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
d_est = read.table("problin_k10_inferred_rates_smooth_500.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
ggsave("problin_k10_inferred_rates_smooth_500.pdf")
d_est = read.table("problin_k10_inferred_rates_smooth_5000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
d_est = read.table("problin_k10_inferred_rates_smooth_2500.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
ggsave("problin_k10_inferred_rates_smooth_2500.pdf")
d_est = read.table("problin_k200_inferred_rates_smooth_500.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
d_est = read.table("problin_k200_inferred_rates_smooth_500.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
ggsave("problin_k20_inferred_rates_smooth_500.pdf")
d_est = read.table("true_scaled_inferred_rates_smooth_100.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
d_est = read.table("true_scaled_inferred_rates_smooth_100.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
d_est = read.table("true_scaled_inferred_rates_smooth_100.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
d_est = read.table("true_scaled_inferred_rates_smooth_100.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
d_est = read.table("true_scaled_inferred_rates_smooth_0.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
d_est = read.table("true_scaled_inferred_rates_smooth_0.txt",header=T)
d_est = read.table("true_scaled_inferred_rates_smooth_1000.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
d_est = read.table("true_scaled_inferred_rates_smooth_100.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
d_est = read.table("true_scaled_inferred_rates_smooth_100.txt",header=T)
d_est = read.table("true_scaled_inferred_rates_smooth_1.txt",header=T)
d_est$type = "est"
d_est$rate = d_est$rate/1000
d = rbind(d_true,d_est)
d$type = factor(d$type,levels = c("est","true"),labels = c("estimated","true"))
d$rateModel = factor(d$rateModel,levels=c("constant","linear","exp2","exp"),labels=c("constant","linear","exponential","exp1"))
ggplot(d[d$rateModel != "exp1",],aes(x=frame,y=rate,linetype=type)) + geom_line() +
facet_wrap(~rateModel)  +
theme_classic()
setwd("/Users/uym2/my_gits/spalin_intMemoir/data_for_slides/Estimating_Branch_Lengths")
d = read.table("combined_data.txt",header=T)
ggplot(d,aes(x=method,y=error)) + geom_histogram()
ggplot(d,aes(x=method,y=error)) + geom_boxplot()
ggplot(d[d$method != "random",],aes(x=method,y=error)) + geom_boxplot()
ggplot(d[d$method != "random",],aes(x=method,y=error)) +
geom_boxplot() + stat_summary()
ggplot(d[d$method != "random",],aes(x=method,y=error)) +
geom_boxplot() + stat_summary() + ylim(0,1)
setwd("/Users/uym2/my_gits/spalin_intMemoir/data_for_slides/Inferring_Ancestral_Locations")
d = read.table("combined_data.txt",header=T)
ggplot(d,aes(x=method,y=error)) + geom_boxplot()
ggplot(d[d$method %in% c("problin","spalin","true_brlen"),],aes(x=method,y=error)) + geom_boxplot()
ggplot(d[d$method %in% c("problin","spalin","true_brlen"),],aes(x=method,y=error)) +
geom_boxplot() + stat_summary()
ggplot(d[d$method %in% c("problin","spalin","true_brlen"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary()
ggplot(d[d$method %in% c("problin","spalin","true_brlen"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
setwd("/Users/uym2/my_gits/spalin_intMemoir/data_for_slides/Estimating_Branch_Lengths")
d = read.table("combined_data.txt",header=T)
ggplot(d[d$method != "random",],aes(x=method,y=error)) +
geom_boxplot() +
stat_summary() #+ ylim(0,1)
ggplot(d[d$method != "random",],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() #+ ylim(0,1)
ggplot(d[d$method %in% c("problin","spalin","true_brlen"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
setwd("/Users/uym2/my_gits/spalin_intMemoir/data_for_slides/Inferring_Ancestral_Locations")
d = read.table("combined_data.txt",header=T)
ggplot(d[d$method %in% c("problin","spalin","true_brlen"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
ggplot(d[d$method %in% c("problin","spalin","true_brlen"),],aes(x=method,y=error)) +
geom_boxplot() +
stat_summary() + theme_classic()
ggplot(d[d$method %in% c("problin","spalin","true_brlen"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
ggsave("acestral_locations.pdf",width = 4,height=4)
d$method = factor(d$method,levels=c("true_brlen","problin","spalin"),labels=c("true tree","problin","spalin"))
ggplot(d[d$method %in% c("problin","spalin","true_brlen"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
ggplot(d[d$method %in% c("problin","spalin","true tree"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
d$method = factor(d$method,levels=c("true_brlen","problin","spalin","random"),
labels=c("true tree","problin","spalin","random"))
ggplot(d[d$method %in% c("problin","spalin","true tree","random"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
d = read.table("combined_data.txt",header=T)
levels(d$method)
d = read.table("combined_data.txt",header=T)
ggplot(d,aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
d$method = factor(d$method,levels=c("true_brlen","problin","spalin","random_no_tree"),
labels=c("true tree","problin","spalin","random"))
ggplot(d,aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
ggplot(d[d$method %in% c("problin","spalin","true tree","random"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
d$method = factor(d$method,levels=c("true_brlen","problin","spalin","random_brlen"),
labels=c("true tree","problin","spalin","random"))
d = read.table("combined_data.txt",header=T)
d$method = factor(d$method,levels=c("true_brlen","problin","spalin","random_brlen"),
labels=c("true tree","problin","spalin","random"))
ggplot(d[d$method %in% c("problin","spalin","true tree","random"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
d = read.table("combined_data.txt",header=T)
d$method = factor(d$method,levels=c("true_brlen","problin","spalin","random_brlen"),
labels=c("true branch lengths","problin","spalin","random branch lengths"))
ggplot(d[d$method %in% c("problin","spalin","true tree","random"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
ggplot(d[d$method %in% c("problin","spalin","true branch lengths","random branch lengths"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
ggplot(d[d$method %in% c("problin","spalin","true branch lengths","random branch lengths"),],aes(x=method,y=error)) +
geom_boxplot() +
stat_summary() + theme_classic()
ggplot(d[d$method %in% c("problin","spalin","true branch lengths","random branch lengths"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
d = read.table("combined_data.txt",header=T)
d$method = factor(d$method,levels=c("true_brlen","problin","spalin","random_brlen"),
labels=c("true","problin","spalin","random"))
ggplot(d[d$method %in% c("problin","spalin","true","random"),],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() + theme_classic()
ggsave("acestral_locations.pdf",width = 4,height=4)
ggplot(d[d$method != "random",],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() #+ ylim(0,1)
setwd("/Users/uym2/my_gits/spalin_intMemoir/data_for_slides/Estimating_Branch_Lengths")
d = read.table("combined_data.txt",header=T)
ggplot(d[d$method != "random",],aes(x=method,y=error)) +
#geom_boxplot() +
stat_summary() #+ ylim(0,1)
setwd("/Users/uym2/my_gits/spalin_intMemoir/data_for_slides/Inferring_Ancestral_Locations_Analyzing_Grouth_Truth")
dx = read.table("true_tree_normalized_distances_x.csv")
head(dx)
ggplot(dx,aes(x=V1)) + geom_histogram()
ggplot(dx,aes(x=V1)) + geom_histogram(color="black",bins=100)
setwd("/Users/uym2/my_gits/spalin/processed_data/perFrame_analyses/")
require(ggplot2)
d = read.table("all_diffussion.txt",header=T)
# x-coordinate histogram => zero inflated
ggplot(d,aes(x=par_x-x)) +
geom_histogram(color="black") + theme_classic() +
theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) +
facet_wrap(~ID,scale="free")
setwd("/Users/uym2/my_gits/spalin_intMemoir/processed_data/perFrame_analyses")
require(ggplot2)
d = read.table("all_diffussion.txt",header=T)
# x-coordinate histogram => zero inflated
ggplot(d,aes(x=par_x-x)) +
geom_histogram(color="black") + theme_classic() +
theme(axis.text.y = element_blank(),axis.ticks.y = element_blank()) +
facet_wrap(~ID,scale="free")
# exclude "division frames"
ggplot(d[d$div_frame == "False" & (d$par_x-d$x) != 0,],aes(sample=par_x-x)) +
geom_qq(size=0.1) + geom_qq_line() +
theme_classic() #+ facet_wrap(~ID,scale="free")
# exclude "division frames"
ggplot(d[d$div_frame == "False" & (d$par_x-d$x) != 0,],aes(sample=par_x-x)) +
geom_qq(size=0.1) + geom_qq_line() +
theme_classic() + facet_wrap(~ID,scale="free")
setwd("/Users/uym2/my_gits/spalin_intMemoir/data_for_slides/Inferring_Ancestral_Locations_Analyzing_Grouth_Truth")
dx = read.table("true_tree_normalized_distances_x.csv")
ggplot(dx,aes(x=V1)) + geom_histogram(color="black",bins=100)
ggplot(dx,aes(x=V1/0.006)) + geom_histogram(color="black",bins=100)
ggplot(dx,aes(x=V1)) + geom_histogram(color="black",bins=100)
ggplot(dx,aes(x=V1*0.006)) + geom_histogram(color="black",bins=100)
ggplot(dx,aes(x=V1*0.006)) + geom_histogram(color="black",bins=100) + theme_classic()
ggplot(dx,aes(x=V1*0.006)) + geom_histogram(color="black",bins=100) +
xlab("x-diffusion") + theme_classic()
ggsave("x_diffusion.pdf",width=4,height=4)
dy = read.table("true_tree_normalized_distances_y.csv")
ggplot(dx,aes(x=V1*0.006)) + geom_histogram(color="black",bins=100) +
xlab("x-diffusion") + theme_classic()
ggplot(dy,aes(x=V1*0.006)) + geom_histogram(color="black",bins=100) +
xlab("x-diffusion") + theme_classic()
ggplot(dy,aes(x=V1*0.006)) + geom_histogram(color="black",bins=100) +
xlab("y-diffusion") + theme_classic()
ggsave("y_diffusion.pdf",width=4,height=4)
