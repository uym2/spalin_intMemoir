theme(panel.spacing = unit(0,"pt"))
setwd("/Users/uym2/my_gits/MD-Cat-paper/Plots/simulated/HIV")
require(ggplot2)
d = read.table("tmrca.txt",header=T)
h = data.frame("treeModel"=c("D750_11_10","D750_3_25","D995_11_10","D995_3_25"),
"height"=c(29.3667,66.8334,22.4934,32.4669),
"name"=c("M3","M4","M1","M2"))
d = merge(d,h)
d$clockModel =factor(d$clockModel,levels = c("exp","gamma","lognorm",
"clock4","clock3","clock1","clock2",
"trilnormcave","trilnormvex","trilnorm",
"quartlnorm","uniform"),
labels = c("Exponential","Gamma","Lognormal",
"Bimodal 1","Bimodal 2","Bimodal 3","Bimodal 4",
"Trimodal 1","Trimodal 2","Trimodal 3",
"Quartmodal","Uniform"))
d$method = factor(d$method,levels=c("Bstrict","Blnorm","lsd","wlogdate","emd"),
labels=c("BEAST−strict−clock","BEAST−lognormal","LSD","wLogDate","MD-Cat"))
quantiles_95 <- function(x) {
r <- quantile(x, probs=c(0.05, 0.05, 0.5, 0.95, 0.95))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
ggplot(d[!d$method %in% c("BEAST−lognormal") & d$clockModel %in% c("Uniform","Exponential","Gamma","Lognormal"),],
aes(x=clockModel,y=-tmrca/height*100,fill=method)) +
stat_summary(position=position_dodge2(width=0.75),fun.data = quantiles_95,geom="boxplot") +
stat_summary(position = position_dodge2(width=0.9)) +
#stat_summary(aes(group=method),geom="line") +
geom_hline(yintercept = 0,linetype=2,size=1) +
scale_fill_brewer(palette = "Dark2") +
scale_x_discrete(name="") +
#facet_wrap(~name,scale="free") +
ylab("tMRCA normalized bias (%)") + xlab("clock model") +
theme_classic() + theme(legend.title = element_blank(), legend.position = c(0.5,0.8)) +
theme(panel.spacing = unit(0,"pt"))
ggplot(d[!d$method %in% c("BEAST−lognormal") & d$clockModel %in% c("Uniform","Exponential","Gamma","Lognormal"),],
aes(x=clockModel,y=-tmrca/height*100,fill=method)) +
stat_summary(position=position_dodge2(width=0.75),fun.data = quantiles_95,geom="boxplot") +
stat_summary(position = position_dodge2(width=0.9)) +
#stat_summary(aes(group=method),geom="line") +
geom_hline(yintercept = 0,linetype=2,size=1) +
scale_fill_brewer(palette = "Dark2") +
scale_x_discrete(name="") +
#facet_wrap(~name,scale="free") +
ylab("tMRCA normalized bias (%)") + xlab("clock model") +
theme_classic() + theme(legend.title = element_blank(), legend.position = c(0.5,0.8)) +
theme(panel.spacing = unit(0,"pt"))
ggsave("results_tmrca_canonical.pdf",width = 4,height = 4)
ggplot(d[!d$method %in% c("BEAST−lognormal") & d$clockModel %in% c("Bimodal 1","Bimodal 2","Bimodal 3","Bimodal 4"),],
aes(x=clockModel,y=-tmrca/height*100,fill=method)) +
stat_summary(position=position_dodge2(width=0.75),fun.data = quantiles_95,geom="boxplot") +
stat_summary(position = position_dodge2(width=0.9)) +
#stat_summary(aes(group=method),geom="line") +
geom_hline(yintercept = 0,linetype=2,size=1) +
scale_fill_brewer(palette = "Dark2") +
scale_x_discrete(name="") +
#facet_wrap(~name,scale="free") +
ylab("tMRCA normalized bias (%)") + xlab("clock model") +
theme_classic() + theme(legend.title = element_blank(), legend.position = "None") +
theme(panel.spacing = unit(0,"pt"))
ggsave("results_tmrca_bimodals.pdf",width = 4,height = 4)
ggplot(d[!d$method %in% c("BEAST−lognormal") & d$clockModel %in% c("Trimodal 1","Trimodal 2","Trimodal 3","Quartmodal"),],
aes(x=clockModel,y=-tmrca/height*100,fill=method)) +
stat_summary(position=position_dodge2(width=0.75),fun.data = quantiles_95,geom="boxplot") +
stat_summary(position = position_dodge2(width=0.9)) +
#stat_summary(aes(group=method),geom="line") +
geom_hline(yintercept = 0,linetype=2,size=1) +
scale_fill_brewer(palette = "Dark2") +
scale_x_discrete(name="") +
#facet_wrap(~name,scale="free") +
ylab("tMRCA normalized bias (%)") + xlab("clock model") +
theme_classic() + theme(legend.title = element_blank(), legend.position = "None") +
theme(panel.spacing = unit(0,"pt"))
ggsave("results_tmrca_multimodals.pdf",width = 4,height = 4)
setwd("/Users/uym2/my_gits/MD-Cat-paper/Plots/simulated/HIV")
require(ggplot2)
d = read.table("all_divergence.txt.txt",header=T)
d = read.table("all_divergence.txt",header=T)
h = data.frame("treeModel"=c("D750_11_10","D750_3_25","D995_11_10","D995_3_25"),
"height"=c(29.3667,66.8334,22.4934,32.4669),
"name"=c("M3","M4","M1","M2"))
d1 = merge(d,h)
d1$method = factor(d1$method,levels=c("Bstrict","Blnorm","lsd","wlogdate","emd"),
labels=c("BEAST-strict-clock","BEAST-lognormal","LSD","wLogDate","MD-Cat"))
d1$clockModel =factor(d1$clockModel,levels = c("exp","gamma","lognorm",
"clock4","clock3","clock1","clock2",
"trilnormcave","trilnormvex","trilnorm",
"quartlnorm","uniform"),
labels = c("Exponential","Gamma","Lognormal",
"Bimodal 1","Bimodal 2","Bimodal 3","Bimodal 4",
"Trimodal 1","Trimodal 2","Trimodal 3",
"Quartmodal","Uniform"))
quantiles_95 <- function(x) {
r <- quantile(x, probs=c(0.05, 0.05, 0.5, 0.95, 0.95))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
d1$error = sqrt(d1$mse)/d1$height
d1$host = "intra-host"
d1[d1$name %in% c("M3","M4"),]$host = "inter-host"
d1$host = factor(d1$host,levels = c("intra-host","inter-host"))
d1$nsmpltime = "11 sampling times"
d1[d1$name %in% c("M2","M4"),]$nsmpltime = "3 sampling times"
ggplot(d1[! d1$method %in% c("BEAST-lognormal","LSD"),],aes(x=clockModel,y=sqrt(mse)/height,color=method)) +
stat_summary() +
stat_summary(aes(group=method),geom="line") +
scale_color_brewer(palette = "Dark2") +
#scale_y_log10() +
scale_x_discrete(name="") +
#facet_grid(grepl(pattern = "D995", treeModel)~grepl(pattern = "11_10", treeModel),scale="free_y") +
facet_grid(host~nsmpltime,scale="free_y") +
#facet_wrap(~name) +
ylab("normalized RMSE") + xlab("clock model") +
theme_bw() + theme(legend.title = element_blank(), legend.position = "bottom") +
theme(panel.spacing = unit(2,"pt"),axis.text.x = element_text(angle=45,vjust=1,hjust=1))
ggplot(d1[!d1$method %in% c("BEAST-lognormal") & d1$clockModel %in% c("Trimodal 1","Trimodal 2","Trimodal 3","Quartmodal"),],aes(x=clockModel,y=100*error,fill=method)) +
#geom_boxplot(outlier.alpha = 0.5,outlier.size = 0.1,notch=T) +
stat_summary(position=position_dodge2(width=0.75),fun.data = quantiles_95,geom="boxplot") +
stat_summary(position=position_dodge2(width=0.9)) +
scale_fill_brewer(palette = "Dark2") +
#scale_y_log10() +
#coord_cartesian(ylim = c(0.007,5)) +
#facet_wrap(~clockModel,nrow=3) +
ylab("normalized error (%)") + xlab("tree model") +
theme_classic() + theme(legend.title = element_blank(),
legend.position = "None",axis.title.x = element_blank()) +
theme(panel.spacing = unit(0,"pt"))
ggplot(d1[!d1$method %in% c("BEAST-lognormal") & d1$clockModel %in% c("Bimodal 1","Bimodal 2","Bimodal 3","Bimodal 4"),],aes(x=clockModel,y=100*error,fill=method)) +
#geom_boxplot(outlier.alpha = 0.5,outlier.size = 0.1,notch=T) +
stat_summary(position=position_dodge2(width=0.75),fun.data = quantiles_95,geom="boxplot") +
stat_summary(position=position_dodge2(width=0.9)) +
scale_fill_brewer(palette = "Dark2") +
#scale_y_log10() +
#coord_cartesian(ylim = c(0.007,5)) +
#facet_wrap(~clockModel,nrow=3) +
ylab("normalized error (%)") +
theme_classic() + theme(legend.title = element_blank(),
legend.position = "None",axis.title.x = element_blank()) +
theme(panel.spacing = unit(0,"pt"))
ggplot(d1[!d1$method %in% c("BEAST-lognormal") & d1$clockModel %in% c("Exponential","Lognormal","Gamma","Uniform"),],
aes(x=clockModel,y=100*error,fill=method)) +
#geom_boxplot(outlier.alpha = 0.5,outlier.size = 0.1,notch=T) +
stat_summary(position=position_dodge2(width=0.75),fun.data = quantiles_95,geom="boxplot") +
stat_summary(position=position_dodge2(width=0.9)) +
scale_fill_brewer(palette = "Dark2") +
#scale_y_log10() +
#coord_cartesian(ylim = c(0.007,5)) +
#facet_wrap(~clockModel,nrow=3) +
ylab("normalized error (%)") +
theme_classic() + theme(legend.title = element_blank(),
legend.position = c(0.5,0.8),axis.title.x = element_blank()) +
theme(panel.spacing = unit(0,"pt"))
ggplot(d1[!d1$method %in% c("BEAST-lognormal","LSD"),],aes(x=clockModel,y=sqrt(mse)/height,color=method)) +
stat_summary() +
stat_summary(aes(group=method),geom="line") +
scale_color_brewer(palette = "Dark2") +
#scale_y_log10() +
scale_x_discrete(name="") +
ylab("normalized RMSE") + xlab("clock model") +
theme_bw() + theme(legend.title = element_blank(), legend.position = "bottom") +
theme(panel.spacing = unit(2,"pt"),axis.text.x = element_text(angle=45,vjust=1,hjust=1))
d1[d1$name %in% c("M2","M4"),]$nsmpltime = "3 sampling times"
ggplot(d1[!d1$method %in% c("BEAST-lognormal") & d1$clockModel %in% c("Exponential","Lognormal","Gamma","Uniform"),],
aes(x=clockModel,y=100*error,fill=method)) +
#geom_boxplot(outlier.alpha = 0.5,outlier.size = 0.1,notch=T) +
stat_summary(position=position_dodge2(width=0.75),fun.data = quantiles_95,geom="boxplot") +
stat_summary(position=position_dodge2(width=0.9)) +
scale_fill_brewer(palette = "Dark2") +
#scale_y_log10() +
#coord_cartesian(ylim = c(0.007,5)) +
#facet_wrap(~clockModel,nrow=3) +
ylab("normalized error (%)") +
theme_classic() + theme(legend.title = element_blank(),
legend.position = c(0.5,0.8),axis.title.x = element_blank()) +
theme(panel.spacing = unit(0,"pt"))
ggsave("results_mse_canonical.pdf",width = 4,height = 4)
ggplot(d1[!d1$method %in% c("BEAST-lognormal") & d1$clockModel %in% c("Bimodal 1","Bimodal 2","Bimodal 3","Bimodal 4"),],aes(x=clockModel,y=100*error,fill=method)) +
#geom_boxplot(outlier.alpha = 0.5,outlier.size = 0.1,notch=T) +
stat_summary(position=position_dodge2(width=0.75),fun.data = quantiles_95,geom="boxplot") +
stat_summary(position=position_dodge2(width=0.9)) +
scale_fill_brewer(palette = "Dark2") +
#scale_y_log10() +
#coord_cartesian(ylim = c(0.007,5)) +
#facet_wrap(~clockModel,nrow=3) +
ylab("normalized error (%)") +
theme_classic() + theme(legend.title = element_blank(),
legend.position = "None",axis.title.x = element_blank()) +
theme(panel.spacing = unit(0,"pt"))
ggsave("results_mse_bimodal.pdf",width = 4,height = 4)
ggplot(d1[!d1$method %in% c("BEAST-lognormal") & d1$clockModel %in% c("Trimodal 1","Trimodal 2","Trimodal 3","Quartmodal"),],aes(x=clockModel,y=100*error,fill=method)) +
#geom_boxplot(outlier.alpha = 0.5,outlier.size = 0.1,notch=T) +
stat_summary(position=position_dodge2(width=0.75),fun.data = quantiles_95,geom="boxplot") +
stat_summary(position=position_dodge2(width=0.9)) +
scale_fill_brewer(palette = "Dark2") +
#scale_y_log10() +
#coord_cartesian(ylim = c(0.007,5)) +
#facet_wrap(~clockModel,nrow=3) +
ylab("normalized error (%)") + xlab("tree model") +
theme_classic() + theme(legend.title = element_blank(),
legend.position = "None",axis.title.x = element_blank()) +
theme(panel.spacing = unit(0,"pt"))
ggsave("results_mse_multimodal.pdf",width = 4,height = 4)
setwd("/Users/uym2/my_gits/MD-Cat-paper/Plots/simulated/HIV")
require(ggplot2)
require(reshape2)
d = read.table("EM_iters.txt",header=T)
d$clockModel =factor(d$clockModel,levels = c("unif","exp","gamma","lognorm",
"clock4","clock3","clock1","clock2",
"trilnormcave","trilnormvex","trilnorm",
"quartlnorm"),
labels = c("Uniform","Exponential","Gamma","Lognormal",
"Bimodal 1","Bimodal 2","Bimodal 3","Bimodal 4",
"Trimodal 1","Trimodal 2","Trimodal 3",
"Quartmodal"))
d$iniType =factor(d$iniType,labels = c("RTT","wLogDate"))
m = merge(d,dcast(d,clockModel~.,value.var = "llh",fun.aggregate = max))
ggplot(d,aes(x=iter,y=llh,group=interaction(iniType,iniID),color=iniType,
alpha=paste(clockModel,iniType,iniID) %in% paste(m[m$llh == m$.,1],m[m$llh == m$.,2],m[m$llh == m$.,3]))) +
geom_line(size=1) + scale_y_continuous(trans="identity") +
scale_x_continuous(trans="log10") +
scale_alpha_manual(name="empty",values = c(0.04,1)) +
scale_color_brewer(palette = "Set2",name="empty") +
facet_wrap(~clockModel,scale="free",nrow=2) + theme_classic() +
xlab("iteration") + ylab("log-likelihood") +
theme(legend.title = element_blank(),legend.position = "bottom")
ggsave("EM_iters.pdf",width=5,height=4)
setwd("/Users/uym2/my_gits/MD-Cat-paper/Plots/simulated/angiosperm")
require(ggplot2)
d = read.table("mutation_rates.txt",header=T)
d$method = factor(d$method,levels = c("wLogDate","MD-Cat"))
ggplot(d,aes(x=scenario,y=log10(exp(1))*error,fill=method)) + geom_boxplot(position="dodge") +
stat_summary(position=position_dodge2(width = 0.8)) +
scale_fill_manual(values = c("#D95F02","#7570B3")) +
#scale_fill_brewer(palette = "Dark2") +
xlab("simulation") + ylab("mean squared logarithmic error (MSLE)") +
theme_classic() + theme(legend.title = element_blank(),legend.position = "bottom") +
theme(axis.title.x = element_blank())
ggsave("mutation_rates.pdf",width=4,height=4)
setwd("/Users/uym2/my_gits/MD-Cat-paper/Plots/simulated/angiosperm")
require(ggplot2)
quantiles_95 <- function(x) {
r <- quantile(x, probs=c(0.05, 0.25, 0.5, 0.75, 0.95))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
d = read.table("results_brTime.txt",header=T)
d$method = factor(d$method,levels=c("reltime","wlogdate","emd","Blnorm"),
labels = c("RelTime","wLogDate","MD-Cat","BEAST"))
ggplot(d,aes(x=trueLength,y=estLength,color=method)) +
#geom_point(alpha=0.3,size=0.1) +
stat_summary(size=0.1, alpha=0.6) +
#stat_summary(geom="line") +
geom_smooth(method="lm") +
geom_abline(linetype=2) +
scale_x_log10() + scale_y_log10() +
scale_color_brewer(palette = "Dark2") +
facet_wrap(~clockModel) +
theme_classic() + theme(legend.position = c(0.8,0.2),legend.title = element_blank()) +
xlab("true branch length (million years)") + ylab("estimated branch length (million years)")
ggplot(d,aes(x=trueLength,y=estLength,color=method)) +
#geom_point(alpha=0.3,size=0.1) +
geom_abline() +
stat_summary(size=0.1) +
stat_summary(geom="line") +
#geom_smooth(method = "lm") +
scale_color_brewer(palette = "Dark2") +
facet_wrap(~clockModel) +
theme_classic() + theme(legend.position = c(0.8,0.2),legend.title = element_blank()) +
xlab("true branch length (million years)") + ylab("estimated branch length (million years)")
ggplot(d,aes(x=trueLength,y=log10(estLength/trueLength),color=method)) +
stat_summary(size=0.2) +
stat_summary(geom="line") +
geom_hline(yintercept = 0) +
scale_color_brewer(palette = "Dark2") +
ylab("log-odd ratio (base 10)") + xlab("true branch length (million years)") +
facet_wrap(~clockModel) +
theme_classic() + theme(legend.position = c(0.8,0.2),legend.title = element_blank())
ggplot(d,aes(x=trueLength,y=estLength,color=method)) +
#geom_point(alpha=0.3,size=0.1) +
stat_summary(size=0.1, alpha=0.6) +
#stat_summary(geom="line") +
geom_smooth(method="lm") +
geom_abline(linetype=2) +
scale_x_log10() + scale_y_log10() +
scale_color_brewer(palette = "Dark2") +
facet_wrap(~clockModel) +
theme_classic() + theme(legend.position = c(0.8,0.2),legend.title = element_blank()) +
xlab("true branch length (million years)") + ylab("estimated branch length (million years)")
ggsave("angios_brTime.pdf",width = 4,height = 4)
ggsave("angios_brTime.pdf",width = 4.2,height = 4)
ggsave("angios_brTime.pdf",width = 4.5,height = 4)
quantiles_95 <- function(x) {
r <- quantile(x, probs=c(0.05, 0.25, 0.5, 0.75, 0.95))
names(r) <- c("ymin", "lower", "middle", "upper", "ymax")
r
}
d = read.table("results_tmrca.txt",header=T)
d$method = factor(d$method,levels=c("reltime","wlogdate","emd","Blnorm"),
labels = c("RelTime","wLogDate","MD-Cat","BEAST"))
ggplot(d,aes(x=method,y=140-tmrca,fill=method)) +
stat_summary(position=position_dodge2(width=0.75),
fun.data = quantiles_95,geom="boxplot") +
stat_summary() + scale_fill_brewer(palette = "Dark2") +
geom_hline(yintercept = 140,linetype=2,size=1) +
facet_wrap(~clockModel,scale="free",nrow = 1) +
ylab("tMRCA") +
theme_classic() +
theme(axis.ticks.x = element_blank(),axis.title.x = element_blank(),axis.text.x = element_blank()) +
theme(legend.title = element_blank(),legend.position = "bottom")
ggplot(d,aes(x=clockModel,y=abs(tmrca)*100/140,color=method)) +
stat_summary() +
stat_summary(aes(group=method),geom="line") +
scale_color_brewer(palette = "Dark2") + scale_y_log10() +
ylab("percent error") +
theme_bw() +
theme(axis.title.x = element_blank()) +
theme(legend.title = element_blank(),legend.position = "bottom")
ggplot(d,aes(x=method,y=140-tmrca,fill=method)) +
stat_summary(position=position_dodge2(width=0.75),
fun.data = quantiles_95,geom="boxplot") +
stat_summary() + scale_fill_brewer(palette = "Dark2") +
geom_hline(yintercept = 140,linetype=2,size=1) +
facet_wrap(~clockModel,scale="free",nrow = 1) +
ylab("tMRCA") +
theme_classic() +
theme(axis.ticks.x = element_blank(),axis.title.x = element_blank(),axis.text.x = element_blank()) +
theme(legend.title = element_blank(),legend.position = "bottom")
ggsave("angios_tmrca.pdf",width=6,height=4)
exp(-1)
1382.2829727803 -1382.2829744496375
exp(-1.669338e-06/1e-6)
1382.2829744496375 -1382.282975253675
exp((1382.2829744496375 -1382.282975253675)/1e-6)
qbinom()
?qbinom
qbinom(0,30,0.4)
qbinom(1,30,0.4)
qbinom(29,30,0.4)
pbinom(29,30,0.4)
pbinom(20,30,0.4)
pbinom(30,30,0.4)
pbinom(0,30,0.4)
pbinom(-1,30,0.4)
pbinom(0,30,0.4)
0.4*30
pbinom(12,30,0.4)
dbinom(12,30,0.4)
dbinom(0,30,0.4)
dbinom(10,30,0.4)
dbinom(13,30,0.4)
pbinom(13,30,0.4)
pbinom(29,30,0.4)
pbinom(28,30,0.4)
pbinom(27,30,0.4)
pbinom(26,30,0.4)
pbinom(25,30,0.4)
1-pbinom(25,30,0.4)
1-pbinom(0,24,0.4)
pbinom(0,24,0.4)
pbinom(1,24,0.4)
pbinom(2,24,0.4)
pbinom(3,24,0.4)
pbinom(4,24,0.4)
pbinom(5,24,0.4)
setwd("/Users/uym2/my_gits/MD-Cat-paper/Plots/simulated/sysBio_revision")
require(ggplot2)
d = read.table("MDCat_HIVsim_vary_k.txt",header=T)
##################################################################
d = read.table("MDCat_HIVsim_vary_k_with_crossval.txt",header=T)
d1 = d[d$k %in% c(2,5,10,25,50,"selected"),]
h = data.frame("treeModel"=c("D750_11_10","D750_3_25","D995_11_10","D995_3_25"),
"height"=c(29.3667,66.8334,22.4934,32.4669),
"name"=c("M3","M4","M1","M2"))
d1 = merge(d1,h)
d1$error = abs(d1$trueAge-d1$estAge)/d1$height
d1$clockModel = factor(d1$clockModel,levels=c("trilnormcave","trilnormvex","trilnorm"),labels=c("Trimodal1","Trimodal2","Trimodal3"))
d1$selected = "Not selected"
d1[d1$k == "selected",]$selected = "Selected"
require(reshape2)
d2 = dcast(selected+treeModel+clockModel+rep~"error",data=d1,value.var = "error",fun.aggregate = mean)
ggplot(d2,aes(x=treeModel,y=error,fill=selected)) + geom_boxplot(outlier.size = 0.2) +
stat_summary(position=position_dodge2(width = 0.75),size=0.3) +
facet_wrap(~clockModel,scale="free") + theme_classic() + theme(axis.text.x = element_text(angle = 30))
ggsave("MDCat_HIVsim_crossval_k.pdf")
########################################
d = read.table("MDCat_Angiosperm_vary_k_with_crossval.txt",header=T)
d1 = d[d$k %in% c(2,5,10,25,50,"selected"),]
require(reshape2)
head(d1)
d1 = d[d$k %in% c("k2","k5","k10","k25","k50","kselected"),]
require(reshape2)
d2 = dcast(selected+treeModel+clockModel+rep~"error",data=d1,value.var = "error",fun.aggregate = mean)
d = read.table("MDCat_Angiosperm_vary_k_with_crossval.txt",header=T)
d1 = d[d$k %in% c("k2","k5","k10","k25","k50","kselected"),]
d1$error = abs(d1$trueNodeAge-d1$estNodeAge)/140
d2 = dcast(selected+treeModel+clockModel+rep~"error",data=d1,value.var = "error",fun.aggregate = mean)
d1$selected = "Not selected"
d1[d1$k == "kselected",]$selected = "Selected"
d2 = dcast(selected+treeModel+clockModel+rep~"error",data=d1,value.var = "error",fun.aggregate = mean)
head(d)
d2 = dcast(selected+scenario+rep~"error",data=d1,value.var = "error",fun.aggregate = mean)
ggplot(d2,aes(x=treeModel,y=error,fill=selected)) + geom_boxplot(outlier.size = 0.2) +
stat_summary(position=position_dodge2(width = 0.75),size=0.3) +
facet_wrap(~clockModel,scale="free") + theme_classic() + theme(axis.text.x = element_text(angle = 30))
ggplot(d2,aes(x=treeModel,y=error,fill=selected)) + geom_boxplot(outlier.size = 0.2) +
stat_summary(position=position_dodge2(width = 0.75),size=0.3) +
facet_wrap(~scenario,scale="free") + theme_classic() + theme(axis.text.x = element_text(angle = 30))
head(d)
head(d2)
ggplot(d2,aes(x=scenario,y=error,fill=selected)) + geom_boxplot(outlier.size = 0.2) +
stat_summary(position=position_dodge2(width = 0.75),size=0.3) +
theme_classic() + theme(axis.text.x = element_text(angle = 30))
ggplot(d2,aes(x=scenario,y=error,fill=selected)) + geom_boxplot(outlier.size = 0.2) +
stat_summary(position=position_dodge2(width = 0.75),size=0.3) +
theme_classic() + theme(axis.text.x = element_text(angle = 30),legend.title = element_blank())
ggplot(d2,aes(x=scenario,y=error,fill=selected)) + geom_boxplot(outlier.size = 0.2) +
stat_summary(position=position_dodge2(width = 0.75),size=0.3) +
theme_classic() + theme(axis.text.x = element_text(angle = 30),
legend.title = element_blank(),legend.position = "None")
ggplot(d2,aes(x=scenario,y=error,fill=selected)) + geom_boxplot(outlier.size = 0.2) +
stat_summary(position=position_dodge2(width = 0.75),size=0.3) +
theme_classic() + theme(axis.text.x = element_text(angle = 30),
legend.title = element_blank(),legend.position = "bottom")
ggplot(d2,aes(x=scenario,y=error,fill=selected)) + geom_boxplot(outlier.size = 0.2) +
stat_summary(position=position_dodge2(width = 0.75),size=0.3) +
theme_classic() + theme(axis.text.x = element_text(angle = 30), axis.title.x = element_blank(),
legend.title = element_blank(),legend.position = "bottom")
ggsave("MDCat_Angiosperm_crossval_k.pdf")
d = read.table("MDCat_Angiosperm_vary_k_nodeAge.txt",header=T)
d1 = d[d$k %in% c(3,5,10,25,50,75,100),]
d1$error = abs(d1$trueNodeAge-d1$estNodeAge)/140
ggplot(d1,aes(x=k,y=error,color=scenario)) +
stat_summary() + geom_line(stat="summary") +
scale_x_log10(breaks=c(2,5,10,25,50,100)) +  xlab("# rate categories") + ylab("divergence time error (%)") +
theme_classic() + theme(legend.title = element_blank(),legend.position = c(0.8,0.8))
ggplot(d2,aes(x=scenario,y=error,fill=selected)) + geom_boxplot(outlier.size = 0.2) +
stat_summary(position=position_dodge2(width = 0.75),size=0.3) +
theme_classic() + theme(axis.text.x = element_text(angle = 30), axis.title.x = element_blank(),
legend.title = element_blank(),legend.position = "bottom")
summary(aov(error~selected*scenario,data=d2))
ggplot(d2,aes(x=scenario,y=error,fill=selected)) + geom_boxplot(outlier.size = 0.2) +
stat_summary(position=position_dodge2(width = 0.75),size=0.3) +
theme_classic() + theme(axis.text.x = element_text(angle = 0), axis.title.x = element_blank(),
legend.title = element_blank(),legend.position = "bottom")
ggsave("MDCat_Angiosperm_crossval_k.pdf")
ggsave("MDCat_Angiosperm_crossval_k.pdf")
setwd("/Users/uym2/my_gits/spalin_intMemoir/simulated_data")
d = read.table("k10_r1_brlens.txt",header=T)
head(d)
ggplot(d,aes(x=method,y=abs(estBrlen-trueBrlen))) + geom_boxplot()
ggplot(d,aes(x=method,y=abs(estBrlen-trueBrlen)/trueBrlen)) + geom_boxplot()
ggplot(d,aes(x=method,y=abs(estBrlen-trueBrlen))) + geom_boxplot()
ggplot(d,aes(x=method,y=abs(estBrlen-trueBrlen))) + stat_summary()
ggplot(d,aes(x=method,y=abs(estBrlen-trueBrlen)/trueBrlen)) + stat_summary()
ggplot(d,aes(x=method,y=abs(estBrlen-trueBrlen))) + stat_summary()
ggplot(d,aes(x=method,y=abs(estBrlen*0.006/trueBrlen))) + stat_summary()
d = read.table("k10_r1_brlens.txt",header=T)
d = read.table("k10_r1_brlens.txt",header=T)
ggplot(d,aes(x=method,y=abs(estBrlen*0.006/trueBrlen))) + stat_summary()
ggplot(d,aes(x=method,y=abs(estBrlen-trueBrlen))) + stat_summary()
ggplot(d,aes(x=nodeAge,y=abs(estBrlen/trueBrlen))) + stat_summary()
ggplot(d,aes(x=nodeAge,y=abs(estBrlen/trueBrlen),color=method)) + stat_summary()
ggplot(d,aes(x=nodeAge,y=abs(estBrlen/trueBrlen))) + stat_summary() + facet_wrap(~method)
head(d)
d1 = d[d$nodeAge != "virtual" & d$nodeAge >0 & d$nodeAge < 216 & d$trueBrlen > 20 & d$trueBrlen < 50,]
ggplot(d1,aes(x=nodeAge,y=abs(estBrlen/trueBrlen))) + stat_summary() + facet_wrap(~method)
ggplot(d1,aes(x=nodeAge,y=abs(estBrlen/trueBrlen))) + stat_summary() + geom_smooth(method="lm") +
facet_wrap(~method)
ggplot(d1,aes(x=nodeAge,y=abs(estBrlen/trueBrlen))) + stat_summary() +
geom_smooth(method="lm") +
facet_wrap(~method)
ggplot(d1,aes(x=nodeAge,y=abs(estBrlen/trueBrlen))) + stat_summary() +
geom_smooth(method="lm") +
facet_wrap(~method)
ggplot(d1,aes(x=nodeAge,y=abs(estBrlen/trueBrlen))) + stat_summary() +
geom_smooth(method="lm") #+
ggplot(d1,aes(x=as.numeric(nodeAge),y=abs(estBrlen/trueBrlen))) + stat_summary() +
geom_smooth(method="lm") #+
ggplot(d1,aes(x=as.numeric(nodeAge),y=abs(estBrlen/trueBrlen))) + stat_summary() +
geom_smooth(method="lm") +
facet_wrap(~method)
ggplot(d1,aes(x=as.numeric(nodeAge),y=abs(estBrlen/0.006/trueBrlen))) + stat_summary() +
geom_smooth(method="lm") +
facet_wrap(~method)
ggplot(d1,aes(x=as.numeric(nodeAge),y=abs(estBrlen*0.006/trueBrlen))) + stat_summary() +
geom_smooth(method="lm") +
facet_wrap(~method)
ggplot(d1,aes(x=as.numeric(nodeAge),y=abs(estBrlen*0.006/trueBrlen))) + stat_summary() +
geom_smooth(method="lm") + geom_hline(yintercept = 0.006) +
facet_wrap(~method)
mean(d1$estBrlen/d1$trueBrlen)
mean(d1$estBrlen*0.006/d1$trueBrlen)
with(d1[d1$method == "problin",],estBrlen*0.006/trueBrlen)
with(d1[d1$method == "problin",],mean(estBrlen*0.006/trueBrlen))
with(d1[d1$method == "spalin_all",],mean(estBrlen*0.006/trueBrlen))
with(d1[d1$method == "spalin_leaves",],mean(estBrlen*0.006/trueBrlen))
setwd("/Users/uym2/my_gits/spalin_intMemoir/processed_data/location_estimation_analyses")
require(ggplot2)
d = read.table("estimated_location_combined.txt",header=T)
d$error = sqrt((d$true_x-d$estimated_x)**2+(d$true_y-d$estimated_y)**2)
ggplot(d,aes(y=error,x=model,color=model)) +
#geom_boxplot() +
stat_summary(position=position_dodge(width=1)) +
theme_classic()
ggplot(d,aes(y=error,x=model,color=model)) +
geom_boxplot() +
stat_summary(position=position_dodge(width=1)) +
theme_classic()
ggplot(d,aes(y=error,x=model,color=model)) +
#geom_boxplot() +
stat_summary(position=position_dodge(width=1)) +
theme_classic()
